CREATE TABLE IF NOT EXISTS USERS (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(255) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE IF NOT EXISTS CHANNELS (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(255) UNIQUE NOT NULL,
    owner_id BIGINT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (owner_id) REFERENCES USERS(id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS CHANNEL_MEMBERS (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    channel_id BIGINT NOT NULL,
    user_id BIGINT NOT NULL,
    role VARCHAR(30) NOT NULL,
    added_by BIGINT,
    joined_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (channel_id) REFERENCES CHANNELS(id) ON DELETE CASCADE,
    FOREIGN KEY (user_id) REFERENCES USERS(id) ON DELETE CASCADE,
    FOREIGN KEY (added_by) REFERENCES USERS(id)
);

CREATE TABLE IF NOT EXISTS MESSAGES (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    sender_id BIGINT NOT NULL,
    recipient_user_id BIGINT,
    recipient_channel_id BIGINT,
    message TEXT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (sender_id) REFERENCES USERS(id) ON DELETE CASCADE,
    FOREIGN KEY (recipient_user_id) REFERENCES USERS(id),
    FOREIGN KEY (recipient_channel_id) REFERENCES CHANNELS(id)
);

CREATE TABLE IF NOT EXISTS FRIENDS (
    id BIGINT AUTO_INCREMENT PRIMARY KEY,
    friend_id_one BIGINT NOT NULL,
    friend_id_two BIGINT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (friend_id_one) REFERENCES USERS(id) ON DELETE CASCADE,
    FOREIGN KEY (friend_id_two) REFERENCES USERS(id) ON DELETE CASCADE,
    UNIQUE (friend_id_one, friend_id_two),
    CHECK (friend_id_one != friend_id_two)
);
